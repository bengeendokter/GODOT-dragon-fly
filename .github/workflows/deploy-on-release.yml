name: "Deploy on release"
on:
  workflow_run:
    workflows: ["Auto Increase Tag"]
    types:
      - completed

env:
  GODOT_VERSION: 3.5
  GAME_NAME: dragon-fly
  ITCH_USERNAME: wicling

jobs:
  release-check:
    name: ✅Release Check
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: ✅Checkout
        uses: actions/checkout@v2

  previous-tag:
    name: 🏷️Get Previous Tag
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.previoustag.outputs.tag }}
    steps:
      - name: ✅Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: 🏷️Get Previous Tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.0 # Optional fallback tag to use when no tag can be found

  export-web:
    name: 🌐Web Export
    runs-on: ubuntu-latest
    needs:
      - release-check
    container:
      image: barichello/godot-ci:3.5
    steps:
      - name: ✅Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: ⚙Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: 🛠️Web Build
        run: |
          mkdir -v -p build/web
          godot -v --export "HTML5" build/web/index.html
      - name: ⬆Upload Artifact web
        uses: actions/upload-artifact@v2
        with:
          name: web
          path: build/web
          
  export-windows:
    name: 🪟Windows Export
    runs-on: ubuntu-latest
    needs:
      - release-check
    container:
      image: barichello/godot-ci:3.5
    steps:
      - name: ✅Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup ⚙
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: 🛠️Windows Build
        run: |
          mkdir -v -p build/windows
          godot -v --export "Windows Desktop" build/windows/$GAME_NAME.exe
      - name: ⬆Upload Artifact windows
        uses: actions/upload-artifact@v2
        with:
          name: windows
          path: build/windows

  add-to-release:
    name: 🎆Add Exports to Release
    runs-on: ubuntu-latest
    needs:
      - export-web
      - export-windows
      - previous-tag
    steps:
    - name: ✅Checkout
      uses: actions/checkout@v2
    - name: Download Artifact web ⬇
      uses: actions/download-artifact@v2
      with:
        name: web
        path: build/web
    - name: 🗃️Zip Artifact web
      uses: vimtor/action-zip@v1
      with:
        files: build/web/
        dest: HTML.zip
    - name: ⬇Download Artifact windows
      uses: actions/download-artifact@v2
      with:
        name: windows
        path: build/windows
    - name: 🗃️Zip Artifact windows
      uses: vimtor/action-zip@v1
      with:
        files: build/windows/
        dest: windows.zip
    - name: ✨Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.previous-tag.outputs.tag }}
        release_name: ${{ needs.previous-tag.outputs.tag }}
        draft: false
        prerelease: ${{startsWith(steps.previoustag.outputs.tag, '0')}}
    - name: ⬆Upload Release Asset web
      id: upload-release-asset-web 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./HTML.zip
        asset_name: HTML.zip
        asset_content_type: application/zip
    - name: ⬆Upload Release Asset windows
      id: upload-release-asset-windows 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./windows.zip
        asset_name: Windows.zip
        asset_content_type: application/zip


  itch-web-deploy:
    name: 🚀itch.io Web Deploy
    runs-on: ubuntu-latest
    needs:
      - export-web
      - previous-tag
    steps:
      - name: ⬇Download Artifact web
        uses: actions/download-artifact@v2
        with:
          name: web
          path: build/web
      - name: 🚀Deploy itch.io web
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: web
          ITCH_GAME: ${{ env.GAME_NAME }}
          ITCH_USER: ${{ env.ITCH_USERNAME }}
          PACKAGE: build/web
          VERSION: ${{ needs.previous-tag.outputs.tag }}
          
  itch-windows-deploy:
    name: 🚀itch.io Windows Deploy
    runs-on: ubuntu-latest
    needs:
      - export-windows
      - previous-tag
    steps:
      - name: ⬇Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: windows
          path: build/windows
      - name: 🚀Deploy itch.io windows
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: windows
          ITCH_GAME: ${{ env.GAME_NAME }}
          ITCH_USER: ${{ env.ITCH_USERNAME }}
          PACKAGE: build/windows
          VERSION: ${{ needs.previous-tag.outputs.tag }}
          
  delete-artifacts:
    name: 🗑Delete Artifacts
    runs-on: ubuntu-latest
    needs:
      - itch-windows-deploy
      - itch-web-deploy
      - add-to-release
    steps:
      - name: 🗑Delete web and windows
        uses: GeekyEggo/delete-artifact@v1.0.0
        with:
          name: |
            web
            windows
